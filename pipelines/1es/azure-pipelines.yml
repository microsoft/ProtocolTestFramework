# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the OneESPT template
pr:
  branches:
    include:
      - main
trigger:
  branches:
    include:
      - main

variables:
- group: Build Variables
resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows
    customBuildTags:
      - ES365AIMigrationTooling
    stages:
      - stage: stage
        jobs:
          - job: build_and_publish
            displayName: Build and Publish NuGet package
            workspace:
              clean: false
            timeoutInMinutes: 0
            steps:
              - task: UseDotNet@2
                inputs:
                  packageType: 'sdk'
                  version: '8.x'

              - task: DotNetCoreCLI@2
                displayName: 'Restore NuGet packages'
                inputs:
                  command: 'restore'
                  projects: |
                    src/TestFramework/TestFramework.csproj
                    src/TestFramework.AdapterConsole/TestFramework.AdapterConsole.csproj
                    src/UnitTest/UnitTest.csproj
                    src/PTFTestLogger/PTFTestLogger.csproj

              - task: DotNetCoreCLI@2
                displayName: 'Build TestFramework'
                inputs:
                  command: 'build'
                  projects: 'src/TestFramework/TestFramework.csproj'

              - task: DotNetCoreCLI@2
                displayName: 'Build TestFramework.AdapterConsole'
                inputs:
                  command: 'build'
                  projects: 'src/TestFramework.AdapterConsole/TestFramework.AdapterConsole.csproj'

              - task: DotNetCoreCLI@2
                displayName: 'Build UnitTest'
                inputs:
                  command: 'build'
                  projects: 'src/UnitTest/UnitTest.csproj'

              - task: DotNetCoreCLI@2
                displayName: 'Build PTFTestLogger'
                inputs:
                  command: 'build'
                  projects: 'src/PTFTestLogger/PTFTestLogger.csproj'

              - task: DotNetCoreCLI@2
                displayName: 'Run Unit Tests'
                inputs:
                    command: 'test'
                    projects: 'src/UnitTest/UnitTest.csproj'
                    arguments: '--no-build --logger trx --verbosity normal'
                continueOnError: true
                condition: succeededOrFailed()

              - task: PowerShell@2
                displayName: 'Build and Pack PTF'
                inputs:
                  targetType: filePath
                  filePath: ./src/build.ps1

              - task: CopyFiles@2
                displayName: 'Copy nupkg to $(Build.ArtifactStagingDirectory)'
                inputs:
                  SourceFolder: src/drop
                  Contents: '*.nupkg'
                  TargetFolder: '$(Build.ArtifactStagingDirectory)'

              - task: 1ES.PublishNuget@1
                displayName: 'Push NuGet package to Azure Artifacts'
                inputs:
                    command: 'push'
                    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
                    publishVstsFeed: 'WindowsProtocolTestSuites/windowsprotocoltestsuites_PublicPackages'
                    arguments: '-SkipDuplicate'
                condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'), ne(variables['Build.Reason'], 'PullRequest'))

              - task: 1ES.PublishBuildArtifacts@1
                displayName: 'Publish Artifact'
                inputs:
                  PathtoPublish: '$(Build.ArtifactStagingDirectory)'
                  ArtifactName: 'drop'